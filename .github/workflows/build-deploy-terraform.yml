name: Build Terraform and Deploy
on:
  workflow_dispatch:
    branches:
      - 'main'
  push:
    branches:
      - 'main'
    paths:
      - '**/.github/workflows/build-deploy-terraform*'
      - '**/modules/terraform/**'
defaults:
  run:
    working-directory: "modules/terraform/azurerm_resource_group"
permissions:
  contents: read
  id-token: write
jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
            terraform_version: 1.3.9
      - name: Terraform Init
        run: |
          export ARM_CLIENT_ID="${{ secrets.AZURE_CLIENT_ID }}"
          export ARM_CLIENT_SECRET="${{ secrets.AZURE_CLIENT_SECRET }}"
          export ARM_TENANT_ID="${{ secrets.AZURE_TENANT_ID }}"
          export ARM_SUBSCRIPTION_ID="${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          
          terraform init
      - name: Terraform Plan
        id: tf-plan
        run: |
          terraform plan

          echo ${{ steps.tf-plan.outputs.stdout }}
          echo ${{ steps.tf-plan.outputs.stderr }}
          echo ${{ steps.tf-plan.outputs.exitcode }}
  deploy-dev:
    needs: terraform-plan
    environment:
      name: DEV
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Azure Login with OIDC
        uses: Azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      # - name: Deploy Infrastructure
